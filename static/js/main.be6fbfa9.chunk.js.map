{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/Covid-logo.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","description","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","countryLineChart","backgroundColor","option","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaLogo","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be6fbfa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"description\":\"Cards_description__3wJhT\"};","import React from 'react'\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate} }) => {\n    if (!confirmed ) {\n        return 'Loading...'\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify='center'>\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom> Total cases </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={confirmed.value}\n                                duration={1}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" className={styles.description}>Number of active cases of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom> Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={recovered.value}\n                                duration={1}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" className={styles.description}>Number of recoveries from Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={deaths.value}\n                                duration={1}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" className={styles.description}>Number of deaths caused by Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Cards\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url ;\n\n    if(country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\n\n        return { confirmed, recovered, deaths, lastUpdate };\n    }\n        catch (error) {\n            console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`)\n\n        const modifiedData = data.map((dailyData) => ({\n           confirmed: dailyData.confirmed.total,\n           deaths: dailyData.deaths.total,\n           date: dailyData.reportDate, \n        }));\n\n        return modifiedData;\n        }\n\n\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data : { countries }} = await axios.get(`${url}/countries`);\n\n        return countries.map((country) => country.name);\n    }\n    catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\n\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => { \n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length \n        ? (\n            <Line \n            data={{\n                labels: dailyData.map(({ date }) => date),\n                datasets:[{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    label:'infected',\n                    borderColor:'#3333ff',\n                    fill: true,\n                }, \n                ],\n            }}\n         /> ) : null\n    );\n\n    const countryLineChart = (\n     confirmed \n        ? (\n            <Bar \n                 data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{ \n                        label: 'People',\n                        backgroundColor:[ \n                            'rgb(255, 0, 0, 0.6)',\n                            'rgb(0, 128, 0 , 0.6)',\n                            'rgb(0, 0, 0, 0.6)',\n                        ],\n                        data:[confirmed.value, recovered.value, deaths.value]\n                    }]\n                 }}\n                 option={{\n                     legend: {display: false},\n                     title: {display: true, text:`Current state in ${country}`},\n                 }}\n            />\n        ) :null \n    );\n\n    \n    return (\n        <div className={styles.container}>\n            {country ? countryLineChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\n\n\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [fetchedCountries, setFetchedCountries]= useState([]);\n\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n        setFetchedCountries(await fetchCountries());\n    }\n     fetchAPI();\n    }, [setFetchedCountries]);\n\n  \n    return (\n        <FormControl className={styles.FormControl}>\n            <NativeSelect defaultValue=\" \" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker\n","export default __webpack_public_path__ + \"static/media/Covid-logo.6603549c.png\";","\nimport React from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronaLogo from './images/Covid-logo.png';\n\nclass App extends React.Component{\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    \n    this.setState({ data : fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n   \n    this.setState({ data : fetchedData, country: country })\n    \n  }\n\n\n    render () {\n    const { data, country } = this.state;\n\n      return (\n        <div className={styles.container}>\n        <img className={styles.image} src={coronaLogo} alt=\"Covid-19\"/>\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country}/>\n        </div>\n      );\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App /> , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"CountryPicker_FormControl__1RAyw\"};"],"sourceRoot":""}